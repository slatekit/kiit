buildscript {
  ext.kotlin_version = '1.3.72'
  ext.slatekit_version = new File('../version.txt').text
  ext.slatekit_version_beta = new File('../version-beta.txt').text

  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id "java"
  id "maven-publish"
  id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
}

apply from: '../../../../build/gradle/slatekit-common.gradle'

compileJava {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
  jcenter()
  mavenCentral()
  maven {
    url "https://maven.pkg.github.com/slatekit/slatekit"
    credentials {
      username = System.getenv('SLATEKIT_INSTALL_ACTOR')
      password = System.getenv('SLATEKIT_INSTALL_TOKEN')
    }
  }
}

ext.slatekitSetupViaBinary = System.getenv('SLATEKIT_PROJECT_MODE') != 'sources'

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  compile fileTree(dir: 'lib', include: '*.jar')
  compile "com.amazonaws:aws-java-sdk-core:1.11.100"
  compile "com.amazonaws:aws-java-sdk-s3:1.11.100"
  compile "com.amazonaws:aws-java-sdk-sqs:1.11.100"
  compile 'org.threeten:threetenbp:1.3.8'

  // /* <slatekit_local>
  if( slatekitSetupViaBinary ) {
      compile "com.slatekit:slatekit-results:$slatekit_version"
      compile "com.slatekit:slatekit-common:$slatekit_version"
      compile "com.slatekit:slatekit-data:$slatekit_version"
      compile "com.slatekit:slatekit-entities:$slatekit_version"
  } else {
      // */
  compile project(":slatekit-result")
  compile project(":slatekit-common")
  compile project(":slatekit-data")
  compile project(":slatekit-entities")
  } //</slatekit_local>
}

// Slate Kit Component info ( for variables for pom / package / etc )
def slatekitComponentId = 'migrations'
def slatekitComponentName = 'Migrations'
def slatekitComponentDesc = 'SlateKit Migrations: Database migrations'
def slatekitComponentVersion = ext.slatekit_version

// ==================================================================
// Slate Kit Setup mode: defaults to maven vs loading project sources
// ==================================================================
ext.slatekitSetupViaBinary = System.getenv('SLATEKIT_PROJECT_MODE') != 'sources'
task info {
    println('slatekit.setup     : ' + System.getenv('SLATEKIT_PROJECT_MODE'))
    println('slatekit.maven     : ' + slatekitSetupViaBinary)
    println('slatekit.comp.id   : ' + slatekitComponentId)
    println('slatekit.comp.name : ' + slatekitComponentName)
    println('slatekit.comp.desc : ' + slatekitComponentDesc)
    println('slatekit.comp.vers : ' + slatekitComponentVersion)
    println()
    println('project.name       : ' + project.name)
    println('project.path       : ' + project.path)
    println('project.desc       : ' + project.description)
    println('project.projectDir : ' + project.projectDir)
    println('project.buildDir   : ' + project.buildDir)
    println()
    println('build.commit       : ' + gitCommitId())
    println('build.branch       : ' + gitBranchName())
    println('build.date         : ' + getBuildDate())
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/slatekit/slatekit"
      credentials {
        username = System.getenv("SLATEKIT_PUBLISH_ACTOR")
        password = System.getenv("SLATEKIT_PUBLISH_TOKEN")
      }
    }
  }

  publications {
    gpr(MavenPublication) {
      from(components.java)
      groupId 'com.slatekit'
      artifactId "slatekit-${slatekitComponentId}"
      version "${slatekitComponentVersion}"
    }
  }
}

