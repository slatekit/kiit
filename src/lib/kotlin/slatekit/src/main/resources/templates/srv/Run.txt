package ${app.package}


import kotlinx.coroutines.runBlocking
import slatekit.app.AppRunner
import slatekit.providers.logs.logback.LogbackLogs


/**
 * Entry point into the Slate Kit application with support for:
 *
 * 1. environments ( local, dev, qat, pro )
 * 2. command line args
 * 3. argument validation
 * 4. about / help / version display
 * 5. diagnostics ( on startup and end )
 * 6. logging ( console + logback )
 * 7. life-cycle events ( init, exec, end )
 *
 * java -jar ${app.name}.jar ?
 * java -jar ${app.name}.jar --about
 * java -jar ${app.name}.jar --version
 * java -jar ${app.name}.jar -env=dev
 * java -jar ${app.name}.jar -env=dev -conf.dir = "jars"
 * java -jar ${app.name}.jar -env=dev -conf.dir = "conf"
 * java -jar ${app.name}.jar -env=dev -conf.dir = "file://./conf-sample-batch"
 * java -jar ${app.name}.jar -env=dev -config.location="file://./${app.name}/conf"
 */
fun main(args: Array<String>) {
    runBlocking {
        AppRunner.run(
                rawArgs = args,
                about = App.about,
                schema = App.schema,
                enc = App.encryptor,
                logs = LogbackLogs(),
                builder = { ctx -> App(ctx) }
        )
    }
}