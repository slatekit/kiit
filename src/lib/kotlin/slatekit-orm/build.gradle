apply from: '../../../../build/gradle/slatekit-common.gradle'

buildscript {
    ext.kotlin_version = '1.3.21'
    ext.slatekit_version = new File('../version.txt').text
    ext.slatekit_version_beta = new File('../version-beta.txt').text

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.3"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'


// Slate Kit Component info ( for variables for pom / package / etc )
def slatekitComponentId = 'orm'
def slatekitComponentName = 'ORM'
def slatekitComponentDesc = 'SlateKit ORM: Light-Weight SQL ORM'
def slatekitComponentVersion = ext.slatekit_version_beta


// ==================================================================
// Slate Kit Setup mode: defaults to maven vs loading project sources
// ==================================================================
ext.slatekitSetupViaBinary = System.getenv('SLATEKIT_PROJECT_MODE') != 'sources'
task info {
    println('slatekit.setup     : ' + System.getenv('SLATEKIT_PROJECT_MODE'))
    println('slatekit.maven     : ' + slatekitSetupViaBinary)
    println('slatekit.comp.id   : ' + slatekitComponentId)
    println('slatekit.comp.name : ' + slatekitComponentName)
    println('slatekit.comp.desc : ' + slatekitComponentDesc)
    println('slatekit.comp.vers : ' + slatekitComponentVersion)
    println()
    println('project.name       : ' + project.name)
    println('project.path       : ' + project.path)
    println('project.desc       : ' + project.description)
    println('project.projectDir : ' + project.projectDir)
    println('project.buildDir   : ' + project.buildDir)
    println()
    println('build.commit       : ' + gitCommitId())
    println('build.branch       : ' + gitBranchName())
    println('build.date         : ' + getBuildDate())
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        apiVersion = '1.3'
        languageVersion = '1.3'
    }
}


repositories {
    jcenter()
    mavenCentral()
    maven {
        url  "https://dl.bintray.com/codehelixinc/slatekit"
    }
    maven {
        url  "https://maven.pkg.github.com/code-helix/slatekit"
        credentials {
            username = System.getenv('SLATEKIT_INSTALL_ACTOR')
            password = System.getenv('SLATEKIT_INSTALL_TOKEN')
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'org.threeten:threetenbp:1.3.8'

    // /* <slatekit_local>
    if( slatekitSetupViaBinary ) {
        compile "com.slatekit:slatekit-results:$slatekit_version"
        compile "com.slatekit:slatekit-common:$slatekit_version"
        compile "com.slatekit:slatekit-query:$slatekit_version_beta"
        compile "com.slatekit:slatekit-meta:$slatekit_version_beta"
        compile "com.slatekit:slatekit-db:$slatekit_version"
        compile "com.slatekit:slatekit-entities:$slatekit_version_beta"
    } else {
        // */
        compile project(":slatekit-result")
        compile project(":slatekit-common")
        compile project(":slatekit-query")
        compile project(":slatekit-meta")
        compile project(":slatekit-db")
        compile project(":slatekit-entities")
    } //</slatekit_local>
}

// ==================================================================
// BinTray Integration
// ==================================================================
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


// Maven packages require the sources/docs.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "Apache 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "codehelix"
            name "kishore reddy"
            email "kishore@codehelix.co"
        }
    }

    scm {
        url "https://github.com/code-helix/slatekit-${slatekitComponentId}"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.slatekit'
            artifactId "slatekit-${slatekitComponentId}"
            version "${slatekitComponentVersion}"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', "${slatekitComponentDesc}")
                root.appendNode('name', "SlateKit ${slatekitComponentName}")
                root.appendNode('url', "https://github.com/code-helix/slatekit-${slatekitComponentId}")
                root.children().last() + pomConfig
            }
        }
    }
    repositories {
        maven {
            url = "https://maven.pkg.github.com/code-helix/slatekit"
            credentials {
                username = System.getenv("SLATEKIT_PUBLISH_ACTOR")
                password = System.getenv("SLATEKIT_PUBLISH_TOKEN")
            }
        }
    }
}

// gradle bintrayUpload
bintray {

    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('SLATEKIT_BINTRAY_ACTOR')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('SLATEKIT_BINTRAY_TOKEN')
    publish = true
    //configurations = ['archives']
    publications = ['mavenPublication']
    pkg {
        repo            = "slatekit"
        name            = "slatekit-${slatekitComponentId}"
        userOrg         = "codehelixinc"
        desc            = "${slatekitComponentDesc}"
        websiteUrl      = "http://www.slatekit.com/"
        issueTrackerUrl = "https://github.com/code-helix/slatekit-${slatekitComponentId}/issues"
        vcsUrl          = "https://github.com/code-helix/slatekit-${slatekitComponentId}"
        licenses        = ['Apache-2.0']
        publicDownloadNumbers = false
        version {
            name = "${slatekitComponentVersion}"
        }
    }
}

/* ==================================================================
*
* DEPLOY:
* 1. ensure bin-tray user/pswd env vars are set: bintrayUser, bintrayApiKey
* 2. replace the version number(s) in this file
* 3. cd into root directory
* 4. run gradle bintrayUpload
*
* LINKS:
* https://reflectoring.io/guide-publishing-to-bintray-with-gradle/
* https://stackoverflow.com/questions/52359686/configure-gradle-for-kotlin-with-java-1-7
*
* ===================================================================
*/
