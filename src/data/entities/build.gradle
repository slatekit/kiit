buildscript {
  ext.kotlin_version = '1.6.20'
  ext.kiit_version = new File('../../version.txt').text
  ext.kiit_version_beta = new File('../../version-beta.txt').text

  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id "java"
  id "maven-publish"
   id "org.jetbrains.kotlin.jvm" // version "$kotlin_version"
}

apply from: '../../../build/gradle/gradle-utils.gradle'

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileJava {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

java {
  withSourcesJar()
}

repositories {
  jcenter()
  mavenCentral()
  maven {
    url "https://maven.pkg.github.com/slatekit/kiit"
    credentials {
      username = System.getenv('KIIT_INSTALL_ACTOR')
      password = System.getenv('KIIT_INSTALL_TOKEN')
    }
  }
}

ext.kiitSetupViaBinary = System.getenv('KIIT_PROJECT_MODE') != 'sources'

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  compile 'com.squareup.okhttp3:okhttp:3.9.0'
  compile 'org.threeten:threetenbp:1.3.8'

  // /* <slatekit_local>
  if( kiitSetupViaBinary ) {
      compile "dev.kiit:kiit-results:$kiit_version"
      compile "dev.kiit:kiit-common:$kiit_version"
      compile "dev.kiit:kiit-utils:$kiit_version"
      compile "dev.kiit:kiit-context:$kiit_version"
      compile "dev.kiit:kiit-query:$kiit_version"
      compile "dev.kiit:kiit-meta:$kiit_version"
      compile "dev.kiit:kiit-data:$kiit_version"
  } else {
      // */
  compile project(":kiit-result")
  compile project(":kiit-common")
  compile project(":kiit-utils")
  compile project(":kiit-context")
  compile project(":kiit-data")
  compile project(":kiit-query")
  compile project(":kiit-meta")
  } //</slatekit_local>
}

// Slate Kit Component info ( for variables for pom / package / etc )
def kiitComponentId = 'entities'
def kiitComponentName = 'Entities'
def kiitComponentDesc = 'Kiit Entities: Entity Service/Repository pattern'
def kiitComponentVersion = ext.kiit_version

// ==================================================================
// Slate Kit Setup mode: defaults to maven vs loading project sources
// ==================================================================
task info {
    println('slatekit.setup     : ' + System.getenv('KIIT_PROJECT_MODE'))
    println('slatekit.maven     : ' + kiitSetupViaBinary)
    println('slatekit.comp.id   : ' + kiitComponentId)
    println('slatekit.comp.name : ' + kiitComponentName)
    println('slatekit.comp.desc : ' + kiitComponentDesc)
    println('slatekit.comp.vers : ' + kiitComponentVersion)
    println()
    println('project.name       : ' + project.name)
    println('project.path       : ' + project.path)
    println('project.desc       : ' + project.description)
    println('project.projectDir : ' + project.projectDir)
    println('project.buildDir   : ' + project.buildDir)
    println()
    println('build.commit       : ' + gitCommitId())
    println('build.branch       : ' + gitBranchName())
    println('build.date         : ' + getBuildDate())
}

publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/slatekit/kiit"
      credentials {
        username = System.getenv("KIIT_PUBLISH_ACTOR")
        password = System.getenv("KIIT_PUBLISH_TOKEN")
      }
    }
  }

  publications {
    gpr(MavenPublication) {
      from(components.java)
      groupId 'dev.kiit'
      artifactId "kiit-${kiitComponentId}"
      version "${kiitComponentVersion}"
    }
  }
}
