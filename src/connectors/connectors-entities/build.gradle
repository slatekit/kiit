buildscript {
    ext.kotlin_version = '1.6.20'
    ext.kiit_version = file('../../version.txt').text
    ext.kiit_version_beta = file('../../version-beta.txt').text

    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "java"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" // version "$kotlin_version"
    id("org.jlleitschuh.gradle.ktlint") version "10.3.0"
}

apply from: '../../../build/gradle/gradle-utils.gradle'

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

java {
    withSourcesJar()
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://maven.pkg.github.com/slatekit/kiit"
        credentials {
            username = System.getenv('KIIT_INSTALL_ACTOR')
            password = System.getenv('KIIT_INSTALL_TOKEN')
        }
    }
}

ext.kiitSetupViaBinary = System.getenv('KIIT_PROJECT_MODE') != 'sources'

dependencies {

    //implementation group: 'org.slf4j'     , name: 'slf4j-api', version: '1.7.7'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2'
    implementation group: 'ch.qos.logback', name: 'logback-core'   , version: '1.1.2'
    implementation group: 'org.logback-extensions', name: 'logback-ext-loggly'   , version: '0.1.2'


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.threeten:threetenbp:1.3.8'

    // /* <slatekit_local>
    if( kiitSetupViaBinary ) {
        implementation "dev.kiit:kiit-results:$kiit_version"
        implementation "dev.kiit:kiit-common:$kiit_version"
        implementation "dev.kiit:kiit-context:$kiit_version"
        implementation "dev.kiit:kiit-utils:$kiit_version"
        implementation "dev.kiit:kiit-db:$kiit_version"
        implementation "dev.kiit:kiit-entities:$kiit_version"
    } else {
        // */
    implementation project(":kiit-result")
    implementation project(":kiit-common")
    implementation project(":kiit-context")
    implementation project(":kiit-utils")
    implementation project(":kiit-db")
    implementation project(":kiit-entities")
    } //</slatekit_local>
}

// ==================================================================
// Slate Kit Component Info
// ==================================================================
def kiitComponentId = 'connectors-entities'
def kiitComponentName = 'Connectors Entities'
def kiitComponentDesc = 'Kiit Connectors: Connects the Entities and Context modules'
def kiitComponentVersion = ext.kiit_version


// ==================================================================
// Slate Kit Setup mode: defaults to maven vs loading project sources
// ==================================================================
task info {
    println('kiit.setup     : ' + System.getenv('KIIT_PROJECT_MODE'))
    println('kiit.maven     : ' + kiitSetupViaBinary)
    println('kiit.comp.id   : ' + kiitComponentId)
    println('kiit.comp.name : ' + kiitComponentName)
    println('kiit.comp.desc : ' + kiitComponentDesc)
    println('kiit.comp.vers : ' + kiitComponentVersion)
    println()
    println('project.name       : ' + project.name)
    println('project.path       : ' + project.path)
    println('project.desc       : ' + project.description)
    println('project.projectDir : ' + project.projectDir)
    println('project.buildDir   : ' + project.buildDir)
    println()
    println('build.commit       : ' + gitCommitId())
    println('build.branch       : ' + gitBranchName())
    println('build.date         : ' + getBuildDate())
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/slatekit/kiit"
            credentials {
                username = System.getenv("KIIT_PUBLISH_ACTOR")
                password = System.getenv("KIIT_PUBLISH_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from(components.java)
            groupId 'dev.kiit'
            artifactId "kiit-${kiitComponentId}"
            version "${kiitComponentVersion}"
        }
    }
}
